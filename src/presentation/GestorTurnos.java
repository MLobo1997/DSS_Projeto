/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import business.Aluno;
import business.AuxTroca;
import business.Docente;
import business.GesTurno;
import business.Troca;
import business.Turno;
import business.UC;
import exceptions.PedidoRegistadoException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author diogoleitao
 */
public class GestorTurnos extends javax.swing.JDialog {
    
    private GesTurno gesTurno;
    private Aluno aluno;

    /**
     * Creates new form GestorTurnos
     */
    public GestorTurnos(java.awt.Frame parent, boolean modal, GesTurno gesTurno) {
        super(parent, modal);
        this.gesTurno = gesTurno;
        this.aluno = (Aluno) gesTurno.getUtilizador();
        initComponents();
        updateFrame();
        this.jList1.setSelectedIndex(0);
    }
    
    public void updateFrame(){
        List<Turno> turnos = this.aluno.getTurnos();
        updateListInscrito(turnos);
        List<AuxTroca> trocas = this.aluno.getTrocas();
        updateListTrocas(trocas, turnos);
    }
    
    public void updateListInscrito(List<Turno> turnos){
        int index = jList1.getSelectedIndex();
        DefaultListModel<String> lista = new DefaultListModel<>();
        try{
            for(Turno t : turnos){
                UC u = this.gesTurno.getUC(t.getCodigo().split("-")[0]);
                int semestre = this.gesTurno.getSemestre();
                if(u.getSemestre() == semestre){
                    if(!t.getTipo().equals("T")){
                        lista.addElement(t.getCodigo().split("-")[1] + "\t" + u.getNome() + "\t" + u.getSigla());
                    }
                }
            }
        }
        catch (Exception e){
            e.getMessage();
        }
        jList1.setModel(lista);
        jList1.setSelectedIndex(index);
    }
    
    
    public void updateListTrocas(List<AuxTroca> trocas, List<Turno> turnos){
        DefaultListModel<String> lista = new DefaultListModel<>();
        try{
            for(AuxTroca t : trocas){
                lista.addElement(t.getDetalhes());
            }
        }
        catch (Exception e){
            e.getMessage();
        }
        jList3.setModel(lista);
        
    }

    public void updateListPedidos(String codigoTurno){
        DefaultListModel<String> lista = new DefaultListModel<>();
        try{
            UC u = this.gesTurno.getUC(codigoTurno.split("-")[0]);
            for(Turno t: u.getTurnos()){
                String codigo = t.getCodigo();
                if(!codigo.equals(codigoTurno) && !t.getTipo().equals("T")){
                    lista.addElement(codigo.split("-")[1] + "\t" + t.getDiaSem() + "\t" + t.getHora());
                }
            }
        }
        catch (Exception e){
            e.getMessage();
        }
        jList2.setModel(lista);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    String linha = jList1.getSelectedValue();
                    if(linha != null){
                        String siglaUC = linha.split("\t")[2];
                        String turno = linha.split("\t")[0];
                        updateListPedidos(siglaUC+"-"+turno);
                    }
                }
            }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList3);

        jButton1.setText("Confirmar Pedido");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remover Pedido");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Voltar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Inscrito em:");

        jLabel2.setText("Trocar para:");

        jLabel3.setText("Pedidos registados:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String escolhido = jList2.getSelectedValue();
        String linha1 = jList1.getSelectedValue();
        if(linha1 != null && escolhido != null){
            String siglaUC = linha1.split("\t")[2];
            String turnoCodigoAtual = siglaUC+"-"+linha1.split("\t")[0];
            String turnoCodigoPretendido = siglaUC+"-"+escolhido.split("\t")[0];
            
            int size = jList3.getModel().getSize(); 

            
            for (int i = 0; i < size; i++) {
              String item = jList3.getModel().getElementAt(i);
              if(item.split("\t")[0].equals(siglaUC)){
                  Mensagem f = new Mensagem(this, true, "Já existe um pedido de Troca nessa UC");
                  f.setVisible(true);
                  return;
              }
            }
            if(this.gesTurno.getFase() == 1){
                Mensagem f = new Mensagem(this, true, "Nesta fase apenas a direção pode alterar os turnos\n "
                                                    + "Por favor tente mais tarde");
                f.setVisible(true);
            }
            else if(this.gesTurno.getFase() == 3){
                Docente d = this.gesTurno.getTurno(turnoCodigoPretendido).getDocente();
                String email = d.getEmail();
                String nome = d.getNome();
                Mensagem f = new Mensagem(this, true, "Contacte o Docente apenas este pode alterar o Turno\n "
                                                    +   nome+"\n"
                                                    + "Email: " + email);
                f.setVisible(true);
            }
            else{                       
                try{
                    this.gesTurno.TrocaTurno(this.aluno, turnoCodigoAtual, turnoCodigoPretendido);
                    Mensagem f = new Mensagem(this, true, "Troca efetuada");
                    f.setVisible(true);
                } catch (PedidoRegistadoException ex) {
                    Mensagem f = new Mensagem(this, true, "O seu pedido ficou registado");
                    f.setVisible(true);
                }           
                updateFrame();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String s = jList3.getSelectedValue();
        if(s != null){
            String username = this.aluno.getUsername();
            String sigla = s.split("\t")[0];
            String turnoAtual = sigla+"-"+s.split("\t")[2];
            String turnoEscolhido = sigla+"-"+s.split("\t")[4];
            this.gesTurno.removeTroca(username, turnoAtual, turnoEscolhido);
            updateFrame();
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
